<!DOCTYPE html>
<html lang="en">
<%- include('../includes/head.ejs') %>

    <body>
        <%- include('../includes/header.ejs') %>
        <%- include('../includes/menu.ejs') %>
        <%- include('../includes/loading.ejs') %>
        <!-- 채널생성 클릭시 모달창 오픈 -->
        <div id="container__form-box">
            <div class="box__div-form">
                <div id="thema001">
                    그이상의 소통 | 소울메이트
                </div>
                <form action="/client/channel/create" method="post" enctype="multipart/form-data">
                    <div class="box__input">
                        <label>공개설정</label>
                        <div id="open">
                            <label for="yes"><i class="fa-regular fa-circle fa-lg"></i>공개<input type="radio" id="yes" name="open" value="Y"></label>
                            <label for="no"><i class="fa-regular fa-circle fa-lg"></i>비공개<input type="radio" id="no" name="open" value="N"></label>
                        </div>
                    </div>
                    <div class="box__input">
                        <label for="channelName">채널 명</label>
                        <span><input type="text" name="channelName" id="channelName" placeholder="채널명을 입력하세요."></span>
                    </div>
                    <div class="box__input">
                        <label for="thumbnail">썸네일</label>
                        <label for="channelThumbnail">
                            <input type="file" id="thumbnail-file" name="thumbnail">
                            <div id="filename">채널 썸네일을 업로드하세요.</div>
                            <span id="channelThumbnail"><i class="fa-regular fa-image fa-xl"></i></span>
                        </label>
                    </div>
                    <div class="box__input">
                        <label for="category">카테고리</label>
                        <span>
                            <select id="category" name="category">
                                <option disabled selected hidden>카테고리를 선택하세요.</option>
                                <% for(let category of staticCategoryList) { %>
                                    <option value="<%= category.name %>"><%= category.name %></option>
                                <% } %>
                            </select>
                        </span>
                    </div>
                    <div class="box__input">
                        <span><textarea class="contents-form__textarea" name="comment" id="contents" placeholder="우리 채널을 소개할 멘트를 입력하세요."></textarea></span>
                    </div>
                    <div id="box__button__submit">
                        <button type="submit" id="btn__submit">채널 개설을 동의합니다.</button>
                    </div>
                </form>
            </div>
        </div>	
        <%- include('../includes/script.ejs') %>
        <script>
            const onClickOpenYNRadio = () => {
                const circleIcon = document.getElementById('open').querySelectorAll('i');
                for(circle of circleIcon){
                    circle.className = 'fa-regular fa-circle fa-lg';
                    circle.style.color = 'rgba(0, 0, 0, 0.1)';
                }

                console.log('radio!!');
                const checkedRadio = document.querySelector('input[name="open"]:checked');

                const checkedIcon = checkedRadio.parentNode.children[0];

                checkedIcon.className = 'fa-solid fa-circle-check fa-lg';
                checkedIcon.style.color = '#42af2c';
                checkedIcon.style.opacity = '0.8';
            }
            document.getElementById('yes').addEventListener('click',onClickOpenYNRadio);
            document.getElementById('no').addEventListener('click',onClickOpenYNRadio);

            const onClickThumbnailBtn = () => {
                const modal = createModalTagtoSelectThumbnail();
                document.getElementById('cancel').addEventListener('click', () => {
                    onClickCloseBtn('modal-background');
                });
                document.getElementById('complete').addEventListener('click', () => {
                    onClickCompleteBtn('modal-background');
                });
                modal.querySelector('label[for="file"]').addEventListener('change', onChangeSelectFile);
            }

            const onClickCloseBtn = className => {
                removeChildrenTag(className);
            }

            const onClickCompleteBtn = className => {
                const modal = document.querySelector('.modal-add-mode');
                const thumbnail = modal.querySelector('label[for="file"]').querySelector('input[type="file"]').files;
                const base64EncodedFile = document.getElementById('create-channel-thumbnail-box').querySelector('img').src;
                console.log(base64EncodedFile)
                document.getElementById('thumbnail-file').textContent = thumbnail.name;
                document.getElementById('thumbnail-file').files = thumbnail;
                document.getElementById('thumbnail-file').setAttribute('data-src',base64EncodedFile);
                document.getElementById('filename').textContent = thumbnail[0].name;
                document.getElementById('filename').style.color = '#1d1c1d';
                removeChildrenTag(className);
            }

            const createModalTagtoSelectThumbnail = () => {
                const base64EncodedFile = document.getElementById('thumbnail-file').dataset.src || 'https://d2u3dcdbebyaiu.cloudfront.net/uploads/atch_img/309/59932b0eb046f9fa3e063b8875032edd_crop.jpeg';
                const fileName = document.getElementById('filename').textContent;
                const thumbnailFiles = document.getElementById('thumbnail-file').files;
                // 모달창 백그라운드
                const modalBackGround = document.createElement('div');
                modalBackGround.classList.add('modal-background');

                // 모달창
                const modal = document.createElement('div');
                modal.classList.add('modal-add-mode');
                modal.innerHTML +=
                    `<div id="create-channel-thumbnail-box">
                        <img src="${base64EncodedFile}">
                    </div>
                    <div class="create-channel-thumbnail-input-box">
                        <label for="filename">파일명</label>
                        <label for="file">
                            ${fileName}
                            <input type="file" id="file" name="photo" multiple>
                            <i class="fa-regular fa-image fa-lg"></i>
                        </label>
                    </div>
                    <div class="box__button__submit">
                        <button type="submit" id="complete">완료</button>
                        <a id="cancel">취소</a>
                    </div>`;
                console.log(modal);
                // document.getElementById('file').files = thumbnailFiles;
                modalBackGround.appendChild(modal);
                document.body.appendChild(modalBackGround);
                return modal;
            }

            const onChangeSelectFile = async e => {
                try {
                    const fileTag = e.target;

                    if (fileTag.files && fileTag.files[0]) {
                        const fileReader = new FileReader();
                        fileReader.onload = changePreviewPhoto;
                        fileReader.readAsDataURL(fileTag.files[0]);
                    }
                } catch (error) {
                    alert(error);
                    console.log(error)
                }
            }

            const changePreviewPhoto = e => {
                try {
                    const base64EncodedFile = e.target.result;

                    if (!base64EncodedFile) {
                        throw new Error('파일을 읽지 못했습니다!!');
                    }
                    const imgTag = document.querySelector('.modal-add-mode').querySelector('img');
                    console.log(imgTag);
                    imgTag.src = base64EncodedFile;
                    document.querySelector('.create-channel-thumbnail-input-box').querySelector('label[for="file"]').insertAdjacentText('afterbegin',document.getElementById('file').files[0].name);
                } catch (error) {
                    alert(error)
                    console.log(error)
                }
            }

            // 부모 태그에서 자식 태그 삭제 -> 모달창 제거
            const removeChildrenTag = className => {
                const parentNode = document.querySelector(`.${className}`);
                document.body.removeChild(parentNode);
            }
            document.getElementById('channelThumbnail').addEventListener('click', onClickThumbnailBtn);
            document.querySelector('label[for="thumbnail"]').addEventListener('click', onClickThumbnailBtn);
        </script>
    </body>

</html>