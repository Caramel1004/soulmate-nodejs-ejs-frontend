<!-- This favicon was generated using the following font:

- Font Title: League Spartan
- Font Author: Copyright 2020 The League Spartan Project Authors (https://github.com/theleagueof/league-spartan)
- Font Source: http://fonts.gstatic.com/s/leaguespartan/v11/kJEnBuEW6A0lliaV_m88ja5Twtx8BWhtkDVmjZvM_oTpBMdcFguczA.ttf
- Font License: SIL Open Font License, 1.1 (http://scripts.sil.org/OFL)) -->

<!DOCTYPE html>
<html lang="en">
    <%- include('../includes/head.ejs') %>
    <body>
        <%- include('../includes/header.ejs') %>
        <%- include('../includes/menu.ejs') %>
        <%- include('../includes/loading.ejs') %>
        <!-- 챗 보드 -->
        <div class="board-chat">
            <div class="room-name-container">
                <div class="room-name-box">
                    <i id="hamburger" class="fa-solid fa-bars fa-lg"></i><span><%= title %></span>
                </div>
            </div>
            <div class="board-chat__box-history">
                <div class="hamburger-menu-container">
                    <!-- 햄버거메뉴 생성될 자리 -->
                </div>
                <% if(chats.length > 0) { %>
                    <% for(let chatDetail of chats) { %>
                        <div class="board-chat__unit-chat-box">
                            <% if(chatDetail.isNotice == 'N') { %>
                                <div class="board-chat__unit-chat-img">
                                    <img src="<%= chatDetail.creator.photo %>">
                                </div>
                                <div class="chat">
                                    <div class="client-name"><%= chatDetail.creator.name %></div>
                                    <div class="board-chat__unit-chat"><%= chatDetail.chat %></div>
                                </div>
                                <div class="chat-date">
                                    <%= chatDetail.fomatDate %>
                                </div>
                            <% } %>
                        </div>
                        <% if(chatDetail.isNotice == 'Y') { %>
                            <p style="text-align: center;"><%= chatDetail.chat %></p>
                        <% } %>
                    <% } %> 
                <% } %>
            </div>
            <div class="board-chat__box-chat">
                <textarea class="board-chat__textarea" name="content" id="content" placeholder="메세지 보내기"></textarea>
                <input type="file" id="file" name="file" multiple>
                <button class="board-chat__btn" type="button" id="send"><i class="fa-solid fa-paper-plane fa-xl"></i></button>
                <button class="board-chat__btn" type="button" id="sendFile"><i class="fa-solid fa-image fa-xl"></i></button>
            </div>
        </div>

        <!-- 오른쪽 사이드 서브 보드 -->
        <div class="board-sub">
            <div class="box__btn-toggle">
                <button type="button" class="btn-toggle active" id="btn-toggle-user" onclick="toggleButton('참여자')">참여자</button>
                <button type="button" class="btn-toggle" id="btn-toggle-task" onclick="toggleButton('업무')">이미지 쓰레드</button>
            </div>
            <div class="board-user">
                <div class="box__btn__add-member">
                    <button type="button" class="btn__add-member" onclick="onClickLoadUsersInChannel(event)"> + </button>
                    <span>팀원 목록</span>
                </div>
                <div class="number">
                    <h5>인원수 <%= members.length %></h5>
                </div>
                <% for(let member of members) { %>
                    <div class="box">
                        <input type="hidden" name="members" id="members" value="<%= member._id %>">
                        <img src="<%= member.photo %>">
                        <a href="#"><%= member.name %></a>
                    </div>
                <% } %>
            </div>
            <div class="board-task hidden">
                <div class="task-date__box">
                    <!-- <div id="preview" class="content">
                        <p>1. 해당 유저의 모든 채널 조회</p>
                        <p>2. 해당 채널아이디에 해당하는 채널 조회 => 채널 접속</p>
                        <p>3. 해당 유저의 채널 생성 => 채널 생성자가 owner</p>
                        <p>4. 접속 유저의 채널 퇴장 => 채널 스키마-> users에서 필터링</p> 
                        <p>4. 접속 유저의 채널 퇴장 => 채널 스키마-> users에서 필터링</p> 
                    </div> -->
                </div>
            </div>
            <div class="board-channel-user-list hidden">
                <div class="box__top">
                    <div class="box__exit">
                        <button type="button" class="btn__exit" id="exit" onclick="onClickExitUsers(event)"> x </button>
                    </div>
                </div>
                <div class="box__div-select-push hidden">
                    <!-- 선택한 아이템 -->
                </div>
                <form id='form' action="/client/chat/invite/<%= channel._id %>/<%= chatRoomId %>" method="post">
                    <!-- <div class="box">
                        클라이언트 프로필 사진
                        클라이언트 아이디
                        체크 박스
                    </div> -->
                    <div class="box__btn__add-member">
                        <button type="submit" id="add-member" class="btn__add-member"> + </button>
                        <span id="span__text">초대하기</span>
                    </div>
                </form>
            </div>
        </div>

        <script type="module">
            import { io } from "https://cdn.socket.io/4.3.2/socket.io.esm.min.js";

            const socket = io('http://localhost:8080');
            console.log('스크립트 소켓 가동 중!!!');

            const formatter = createdAt => {
                let year = new Date(createdAt).getFullYear();
                let month = new Date(createdAt).getMonth() + 1;
                let day = new Date(createdAt).getDate();
                const timestamp = new Date(createdAt).toTimeString().split(' ')[0];//ex)09:51:35 GMT+0900 (한국 표준시)

                let hour = parseInt(timestamp.split(':')[0]);

                const when = hour >= 12 ? '오후' : '오전';

                if(month < 10) {
                    month = '0' + month;
                }else if(month > 12) {
                    month = '0' + 1;
                }

                if(day < 10) {
                    day = '0' + day
                }
                if (when === '오후' && hour > 12) {
                    hour %= 12;
                }

                const min = timestamp.split(':')[1];

                const fomatDate = `${year}-${month}-${day}  ${when} ${hour}:${min}`;

                return fomatDate;
            }

            const createUnitChatTag = async data => {
                // 제일 큰 유닛 박스
                const chatUnitBox = document.createElement('div');
                chatUnitBox.classList.add('board-chat__unit-chat-box');

                // 이미지 박스
                const imgBox = document.createElement('div');
                const img = document.createElement('img');
                img.setAttribute('src', data.photo);
                imgBox.classList.add('board-chat__unit-chat-img');
                imgBox.appendChild(img);
                console.log('imgBox: ', imgBox);

                // 챗박스
                const chatBox = document.createElement('div');
                chatBox.classList.add('chat');

                // 닉네임
                const clientNameTag = document.createElement('div');
                clientNameTag.classList.add('client-name');
                clientNameTag.textContent = data.name;
                chatBox.appendChild(clientNameTag);
                console.log('clientNameTag: ', clientNameTag);

                // 챗
                const unitChat = document.createElement('div');
                unitChat.classList.add('board-chat__unit-chat');
                unitChat.textContent = data.currentChat;
                chatBox.appendChild(unitChat);
                console.log('unitChat: ', unitChat);

                // 타임 스탬프
                const time = document.createElement('div');
                const formatedTime = formatter(new Date());
                time.classList.add('chat-date');
                time.textContent = formatedTime;

                chatUnitBox.appendChild(imgBox);
                chatUnitBox.appendChild(chatBox);
                chatUnitBox.appendChild(time);
                console.log('chatUnitBox: ', chatUnitBox);


                const historyTag = document.querySelector('.board-chat__box-history');
                historyTag.appendChild(chatUnitBox);

                document.getElementById('content').value = "";

                //스크롤 맨아래로 조정
                historyTag.scrollTop = historyTag.scrollHeight;
            }

            // 채팅 업데이트
            socket.on('sendChat', data => {
                console.log('미들웨어 sendChat!!!');
                console.log('백엔드에서 넘어온 데이터: ', data);
                console.log('채팅 내용: ', data.currentChat);

                createUnitChatTag(data);
            });
            socket.on('exitUser', data => {
                console.log('data: ',data)
                const p = document.createElement('p');
                p.style.color = '#1d1c1d';
                p.textContent = `${data.exitUser.name}님이 퇴장하셨습니다.`

                document.querySelector('.board-chat__box-history').appendChild(p);
            })
          </script>
          <%- include('../includes/script.ejs') %>       
    </body>   
</html>
